force_dns() {
    lanip=$(uci get network.lan.ipaddr 2>/dev/null)
    tor=$(pgrep -f /usr/sbin/tor)

    [ "$1" = "add" ] && {
        ip=$(uci get glconfig.general.ipaddr 2>/dev/null)
        [ -z "$ip" ] && ip=$lanip

        # Remove old rules if they exist
        iptables -t nat -D PREROUTING -i br-lan -s 0/0 -p udp --dport 53 -j DNAT --to "$ip" 2>/dev/null
        iptables -t nat -D PREROUTING -i br-lan -s 0/0 -p tcp --dport 53 -j DNAT --to "$ip" 2>/dev/null

        # Update UCI if necessary
        if [ -n "$lanip" ]; then
            uci set glconfig.general.ipaddr="$lanip" 2>/dev/null
            uci commit glconfig
        fi

        iptables -t nat -C PREROUTING -i br-lan -s 0/0 -p udp --dport 53 -j DNAT --to "$lanip" 2>/dev/null || \
        iptables -t nat -I PREROUTING -i br-lan -s 0/0 -p udp --dport 53 -j DNAT --to "$lanip"

        iptables -t nat -C PREROUTING -i br-lan -s 0/0 -p tcp --dport 53 -j DNAT --to "$lanip" 2>/dev/null || \
        iptables -t nat -I PREROUTING -i br-lan -s 0/0 -p tcp --dport 53 -j DNAT --to "$lanip"

        if [ -n "$tor" ]; then
            iptables -t nat -C PREROUTING -i br-lan -p tcp --dport 53 -j REDIRECT --to-ports 9053 2>/dev/null || \
            iptables -t nat -I PREROUTING -i br-lan -p tcp --dport 53 -j REDIRECT --to-ports 9053

            iptables -t nat -C PREROUTING -i br-lan -p udp --dport 53 -j REDIRECT --to-ports 9053 2>/dev/null || \
            iptables -t nat -I PREROUTING -i br-lan -p udp --dport 53 -j REDIRECT --to-ports 9053
        fi
    }

    [ "$1" = "remove" ] && {
        lanip=$(uci get glconfig.general.ipaddr 2>/dev/null)
        [ -z "$lanip" ] && lanip=$(uci get network.lan.ipaddr 2>/dev/null)

        iptables -t nat -C PREROUTING -i br-lan -s 0/0 -p udp --dport 53 -j DNAT --to "$lanip" 2>/dev/null && \
        iptables -t nat -D PREROUTING -i br-lan -s 0/0 -p udp --dport 53 -j DNAT --to "$lanip"

        iptables -t nat -C PREROUTING -i br-lan -s 0/0 -p tcp --dport 53 -j DNAT --to "$lanip" 2>/dev/null && \
        iptables -t nat -D PREROUTING -i br-lan -s 0/0 -p tcp --dport 53 -j DNAT --to "$lanip"

        if [ -n "$tor" ]; then
            iptables -t nat -D PREROUTING -i br-lan -p tcp --dport 53 -j REDIRECT --to-ports 9053 2>/dev/null
            iptables -t nat -D PREROUTING -i br-lan -p udp --dport 53 -j REDIRECT --to-ports 9053 2>/dev/null
        fi
    }
}

force=$(uci get glconfig.general.force_dns 2>/dev/null)
relay=$(uci get glconfig.bridge.mode 2>/dev/null)
if [ -n "$force" ] && [ "$relay" != "relay" ]; then
    force_dns add
else
    force_dns remove
fi

# Custom route hook
gl-firewall
[ -f /etc/siderouter.fw ] && /etc/siderouter.fw

# PPTP Passthrough
iptables -t raw -D OUTPUT -p tcp --dport 1723 -j CT --helper pptp 2>/dev/null
iptables -t raw -A OUTPUT -p tcp --dport 1723 -j CT --helper pptp

# Charles HTTPS redirect
iptables -t nat -A PREROUTING -p tcp -s 192.168.8.0/24 ! -d 192.168.8.0/24 --dport 80 -j DNAT --to-destination 192.168.0.25:8888




# Force all DNS to go through 192.168.0.25
iptables -t nat -A PREROUTING -i br-lan -p udp --dport 53 -j DNAT --to-destination 192.168.0.25
iptables -t nat -A PREROUTING -i br-lan -p tcp --dport 53 -j DNAT --to-destination 192.168.0.25